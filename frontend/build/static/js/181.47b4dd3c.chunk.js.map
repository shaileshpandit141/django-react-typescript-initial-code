{"version":3,"file":"static/js/181.47b4dd3c.chunk.js","mappings":"2MAkBA,MA4DA,EA5DwCA,KACtC,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MACZ,OAAEC,EAAM,QAAEC,EAAO,OAAEC,EAAM,KAAEC,IAASC,EAAAA,EAAAA,MAqB1C,OAZAC,EAAAA,EAAAA,YAAU,KACO,cAAXL,GACFM,EAAAA,EAAAA,IAAa,UAAWL,GACJ,WAAXD,IACTM,EAAAA,EAAAA,IAAa,QAASL,EACxB,GACC,CAACA,EAASD,KAEbO,EAAAA,EAAAA,KAAsB,MACpBC,EAAAA,EAAAA,KAAwB,KAIxBC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,aAAYC,SAAC,yBAC3BC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mBAAkBC,SAAC,8DAIlCF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,OAAOG,SA3BLC,IACpBA,EAAMC,kBACNC,EAAAA,EAAAA,IAAkB,CAChBlB,MAAOA,GAAS,IAChB,EAuB8Ca,SAAA,EAC5CC,EAAAA,EAAAA,KAACK,EAAAA,GAAmB,CAACC,QAAShB,EAAOiB,UACrCP,EAAAA,EAAAA,KAACK,EAAAA,GAAmB,CAACC,QAAShB,EAAOJ,QACpC,WAAYK,IAAQS,EAAAA,EAAAA,KAACQ,EAAAA,GAAqB,CAACF,QAASf,EAAKgB,UAC1DV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,KAACS,EAAAA,GAAO,CACNC,GAAG,SACHC,KAAK,OACLb,UAAU,iBACVc,KAAK,YAAWb,SACjB,UAGDC,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACLF,KAAK,SACLC,KAAiB,cAAXxB,EAAyB,cAAgB,QAC/CU,UAAU,SACVgB,WAAuB,YAAX1B,EACZ2B,WAAuB,cAAX3B,EAAuBW,SACpC,cAIS,cAAXX,IAA0BY,EAAAA,EAAAA,KAACgB,EAAAA,GAAU,SAEpC,C","sources":["pages/VerifyUserAccountPage/VerifyUserAccountPage.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./VerifyUserAccountPage.css\";\nimport { useParams } from \"react-router-dom\";\nimport { useResetOnRouteChange } from \"hooks\";\nimport {\n  NavLink,\n  Button,\n  DisplaySuccessDetails,\n  DisplayErrorDetails,\n  SigninLink,\n} from \"components\";\nimport {\n  useVerifyUserAccountSelector,\n  verifyUserAccount,\n  resetVerifyUserAccount,\n} from \"features/auth/verifyUserAccount\";\nimport { triggerToast } from \"features/toast\";\n\nconst VerifyUserAccountPage: React.FC = (): JSX.Element => {\n  const { token } = useParams<{ token: string }>();\n  const { status, message, errors, data } = useVerifyUserAccountSelector();\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    verifyUserAccount({\n      token: token || \"\",\n    });\n  };\n\n  useEffect(() => {\n    if (status === \"succeeded\") {\n      triggerToast(\"success\", message);\n    } else if (status === \"failed\") {\n      triggerToast(\"error\", message);\n    }\n  }, [message, status]);\n\n  useResetOnRouteChange(() => {\n    resetVerifyUserAccount();\n  });\n\n  return (\n    <div className=\"verify-user-account-page\">\n      <div className=\"header\">\n        <h3 className=\"form-label\">Verify your account</h3>\n        <p className=\"form-description\">\n          Click the Verify button below to verify your account.\n        </p>\n      </div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <DisplayErrorDetails details={errors.detail} />\n        <DisplayErrorDetails details={errors.token} />\n        {\"detail\" in data && <DisplaySuccessDetails details={data.detail} />}\n        <div className=\"actions\">\n          <NavLink\n            to=\"../../\"\n            type=\"link\"\n            className=\"link back-link\"\n            icon=\"arrowBack\"\n          >\n            Back\n          </NavLink>\n          <Button\n            type=\"submit\"\n            icon={status === \"succeeded\" ? \"checkCircle\" : \"click\"}\n            className=\"button\"\n            isLoaderOn={status === \"loading\"}\n            isDisabled={status === \"succeeded\"}\n          >\n            Verify\n          </Button>\n        </div>\n        {status === \"succeeded\" && <SigninLink />}\n      </form>\n    </div>\n  );\n};\n\nexport default VerifyUserAccountPage;\n"],"names":["VerifyUserAccountPage","token","useParams","status","message","errors","data","useVerifyUserAccountSelector","useEffect","triggerToast","useResetOnRouteChange","resetVerifyUserAccount","_jsxs","className","children","_jsx","onSubmit","event","preventDefault","verifyUserAccount","DisplayErrorDetails","details","detail","DisplaySuccessDetails","NavLink","to","type","icon","Button","isLoaderOn","isDisabled","SigninLink"],"sourceRoot":""}